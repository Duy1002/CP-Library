<snippet>
	<content><![CDATA[
template<typename T>
struct fenwick_tree {
    public:
        int n;
        vector<T> t;
        fenwick_tree() = default;
        fenwick_tree(int n): n(n), t(n + 1) {}
        void build(const vector<T> &a) {
            n = a.size();
            t.resize(n + 1);
            for (int i = 1; i <= n; ++i) {
                t[i] += a[i - 1];
                int j = i + (i & -i);
                if (j <= n) t[j] += t[i];
            }
        }
        void add(int p, T v) {
            for (++p; p <= n; p += p & -p) t[p] += v;
        }
        T sum(int l, int r) const {
            return sum(r) - sum(l);
        }
        int lower_bound(T v) const {
            T s = 0;
            int j = 0;
            for (int i = 1 << __lg(n); i; i >>= 1) {
                int k = j + i;
                if (k <= n && s + t[k] < v) {
                    j = k;
                    s += t[k];
                }
            }
            return j;
        }
    private:
        T sum(int p) const {
            T s = 0;
            for (; p; p &= p - 1) s += t[p];
            return s;
        }
};
]]></content>
	<!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
	<tabTrigger>fenwick_tree</tabTrigger>
	<!-- Optional: Set a scope to limit where the snippet will trigger -->
	<scope>source.c++</scope>
</snippet>
