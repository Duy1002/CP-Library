<snippet>
	<content><![CDATA[
vector<bool> find_bridges(int n, const vector<pair<int, int>> &e) {
    int m = e.size();
    vector<vector<pair<int, int>>> adj(n);
    for (int i = 0; i < m; ++i) {
        adj[e[i].first].emplace_back(e[i].second, i);
        adj[e[i].second].emplace_back(e[i].first, i);
    }
    int time_dfs = 0;
    vector<int> num(n), low(n);
    vector<bool> is_bridge(m);
    auto dfs = [&] (auto &&dfs, int u, int p) -> void {
        num[u] = low[u] = ++time_dfs;
        for (auto &[v, i]: adj[u]) {
            if (!num[v]) {
                dfs(dfs, v, u);
                low[u] = min(low[u], low[v]);
                is_bridge[i] = (low[v] == num[v]);
            } else if (v != p) {
                low[u] = min(low[u], num[v]);
            }
        }
    };
    for (int i = 0; i < n; ++i) if (!num[i]) dfs(dfs, i, i);
    return is_bridge;
}
]]></content>
	<!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
	<tabTrigger>find_bridges</tabTrigger>
	<!-- Optional: Set a scope to limit where the snippet will trigger -->
	<scope>source.c++</scope>
</snippet>
